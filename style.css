* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    width: 100%;
    height: 100%;
}

html {
    font-family: Trash;
    overflow: hidden;

    /* Interface */
    --aside-width: 50px;
    --header-height: calc(50px + var(--global-border-size));
    --footer-height: 200px;
    --z-footer: 20;
    --z-navigation: 10;
    --z-header: 20;
    --z-imagePreview: 30;
}

body {
    display: grid;
    grid-template-areas: "aside main"
                         "aside footer";
    grid-template-columns: var(--aside-width) 1fr;
    grid-template-rows: 1fr var(--footer-height);

    background: var(--body-background);
    border: var(--global-border-size) solid var(--global-border-color);
}

aside {
    --aside-width: 50px;
    grid-area: aside;
    writing-mode: tb;
    transform: rotate(180deg);
    display: flex;
    justify-content: center;
    line-height: calc(var(--aside-width) + 0.215em);
    font-weight: bold;
    font-size: 30px;
    color: var(--dark);
    white-space: nowrap;
}

header {
    position: relative;
    grid-area: header;
    height: var(--header-height);
    color: var(--bright);
    display: flex;
    overflow: hidden;
    padding: 0 2ex;
    z-index: var(--z-header);
    border-bottom: var(--global-border-size) solid var(--global-border-color);
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
}

.history {
    list-style: none;
    display: flex;
    align-items: center;
    font-size: 30px;
    font-family: Inter;
}

.history li {
    cursor: pointer;
    white-space: nowrap;
}

.history li::after {
    content: " <- ";
    white-space: pre;
}

.history li[data-chain="start"]::after {
    content: " ⁂ ";
}

.history li span {
    pointer-events: none;
    position: relative;
    display: inline-block;
}

.history li:hover span {
    background: var(--dark);
    color: var(--bright);
}

.clock {
    font-weight: normal;
}

main {
    grid-area: main;
    background-color: var(--main-background-color);
    background-image: var(--main-background-image);
    background-size: var(--main-background-size);
    background-position: var(--main-background-position);
    border: var(--global-border-size) solid var(--global-border-color);
    border-right: none;
    border-top: none;
    position: relative;
    overflow: hidden;
}

footer {
    grid-area: footer;
    z-index: var(--z-footer);
}

/* NavController */

nav {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    align-items: center;
    justify-content: center;
    --option-height: 60px;
    --option-font-size: 32px;
    z-index: var(--z-navigation);
    display: flex;
    opacity: 0;
    transition: opacity 125ms ease-in-out;
}

nav[data-is-visible=true] {
    opacity: 1;
}

#navSelect {
    max-width: 500px;
}

.navOption {
    margin-top: 1.5ex;
    display: flex;
    font-family: Inter;
}

.navOption:first-child {
    margin-top: 0;
}

[data-navOptionIdx] {
    width: var(--option-height);
    height: var(--option-height);
    background: var(--upcoming-option-background);
    color: var(--upcoming-option-color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--option-font-size);
    border-radius: var(--option-height);
    border-bottom-right-radius: 0;
    flex-shrink: 0;
}

[data-navOptionIdx="0"]::before { content: ""; }
[data-navOptionIdx="1"]::before { content: "➀"; }
[data-navOptionIdx="2"]::before { content: "➁"; }
[data-navOptionIdx="3"]::before { content: ""; }
[data-is-available="false"] [data-navOptionIdx]::before { content: ""; }

.navOptionTitle {
    height: var(--option-height);
    font-size: var(--option-font-size);
    background: var(--upcoming-option-background);
    color: var(--upcoming-option-color);
    display: flex;
    align-items: center;
    padding: 0 1.5ex;
    border-radius: var(--option-height);
    border-bottom-left-radius: 0;
    white-space: nowrap;
}

[data-is-available="false"] .navOptionTitle:empty::before {
    content: "L̷͇̇ő̷͓a̴̗͑d̷̲͌i̷͉͛n̶͚̈g̸͓̽…̴̯̂";
}

/* /NavController */

.grid {
    position: fixed;
    top: 0;
    left: 54px;
    right: 2px;
    bottom: 0;
    pointer-events: none;
}

#loadingSpinner {
    display: flex;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    color: var(--article-loading-spinner-color);
}

/*/ #Article /*/

#article {
    position: absolute;
    color: var(--article-loading-spinner-color);
    font-family: var(--article-extract-font-family);
    font-size: var(--article-extract-font-size);
    line-height: var(--article-extract-line-height);
    font-feature-settings: var(--article-extract-font-feature-settings);
}

.token {
    display: inline-block;
    position: relative;
    white-space: pre-wrap;
    color: var(--token-upcoming-color);
}

#activeToken {
    color: var(--token-active-color);
}

#activeToken #progressToken {
    color: white;
    background: black;
    background: var(--body-background);
    text-shadow: 0 0 30px black;
}

#activeToken #progressToken {
    position: absolute;
    right: 0;
}

#activeToken #progressToken::before {
    content: attr(data-upcoming);
}

#activeToken #progressToken::after {
    color: #ffe0e0;
    background: #e53e3e;
}

#activeToken #progressToken::after {
    content: attr(data-mistyped);
    position: absolute;
    left: 0;
    top: 0;
    white-space: nowrap;
    white-space: pre;
}

.typedToken {
    position: relative;
    color: var(--token-typed-color);
}

.token::before {
    content: attr(data-word);
    overflow: hidden;
    display: inline-block;
}

/*/ FRAME /*/

#transformFrame {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border: var(--frame-border-size) solid var(--frame-border-color);
    z-index: 1;
}

ol[id$=Handles] {
    list-style: none;
}

ol[id$=Handles] li {
    position: absolute;
    --edge-handle-offset: calc(-1 * var(--edge-handle-size) / 2 - var(--frame-border-size) / 2);
}

#edgeHandles li {
    width: var(--edge-handle-size);
    height: var(--edge-handle-size);
    background: var(--edge-handle-background);
    box-shadow: inset 0 0 0 var(--frame-border-size) var(--frame-border-color);
}
#edgeHandles li:nth-child(1) {
    top: var(--edge-handle-offset);
    left: var(--edge-handle-offset);
}
#edgeHandles li:nth-child(2) {
    top: var(--edge-handle-offset);
    right: var(--edge-handle-offset);
}
#edgeHandles li:nth-child(3) {
    bottom: var(--edge-handle-offset);
    left: var(--edge-handle-offset);
}
#edgeHandles li:nth-child(4) {
    bottom: var(--edge-handle-offset);
    right: var(--edge-handle-offset);
}

#middleHandles li {
    background: var(--middle-handle-background);
    width: var(--middle-handle-size);
    height: var(--middle-handle-size);
    --middle-handle-offset: calc(-1 * var(--middle-handle-size) / 2 - var(--global-border-size) / 2);
}
#middleHandles li:nth-child(1) {
    top: var(--middle-handle-offset);
    left: calc(50% - var(--middle-handle-size) / 2);
}
#middleHandles li:nth-child(2) {
    top: calc(50% - var(--middle-handle-size) / 2);
    right: var(--middle-handle-offset);
}
#middleHandles li:nth-child(3) {
    bottom: var(--middle-handle-offset);
    left: calc(50% - var(--middle-handle-size) / 2);
}
#middleHandles li:nth-child(4) {
    top: calc(50% - var(--middle-handle-size) / 2);
    left: var(--middle-handle-offset);
}

/*/ /FRAME /*/

#articleContentWrapper {
    position: absolute;
    top: 0; right: 0;
    bottom: 0; left: 0;
    overflow: hidden;
    padding: 30px;
}

#articleThumbnail[src="data:,"],
#articleImage[src="data:,"] {
    display: none;
}

#articleThumbnail {
    margin-top: 20px;
    border: 2px solid var(--article-image-border-color);
    max-height: var(--footer-height);
    max-width: var(--footer-height);
}

#articleImage {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 95vh;
    width: 95vw;
    object-fit: contain;
    max-height: var(--original-height);
    max-width: var(--original-width);
    z-index: var(--z-imagePreview);
    border: none;
}

/* footer */

footer {
    display: flex;
    grid-gap: 10px;
    justify-content: center;
    align-items: center;
}

.footer-image {
    position: absolute;
    mix-blend-mode: difference;
    max-height: var(--footer-height);
    max-width: var(--footer-height);
    transform-origin: center;
    transition: all 500ms ease-in-out, mix-blend-mode 4s;
}

[controller] {
    --button-height: 50px;
    cursor: pointer;
    font-family: Trash;
    outline: none;
    border: none;
    background: var(--dark);
    color: var(--bright);
    padding: 0 20px;
    line-height: calc(var(--button-height) + 0.215em);
    border-radius: var(--button-height);
    height: var(--button-height);
    font-size: 30px;
    position: relative;
}

[controller] ol {
    position: absolute;
    bottom: calc(var(--button-height) + 10px);
    list-style: none;
    display: none;
    flex-direction: column;
    margin-bottom: -10px;
    align-items: center;
    transform: translateX(-50%);
    left: 50%;
    padding-bottom: 10px;
    grid-gap: 10px;
}

[controller]:hover ol {
    display: flex;
}

[controller][settings~=grid] ol {
    grid-template-columns: 1fr 1fr 1fr;
}

[controller][settings~=grid]:hover ol {
    display: grid;
}

[controller][disabled] {
    opacity: .2;
}

[controller]::before {
    content: attr(data-selected-option);
    position: absolute;
    bottom: 100%;
    background: var(--bright);
    color: var(--dark);
    left: 50%;
    transform: translate(-50%, 71px);
    font-size: 0.5em;
    line-height: calc(20px + 0.215em);
    padding: .2em 0.8em;
    border-radius: 100px;
    height: 20px;
    white-space: nowrap;
}

[controller] ol li {
    display: inline-block;
    background: var(--dark);
    color: var(--bright);
    padding: 0 20px;
    line-height: calc(var(--button-height) + 0.215em);
    border-radius: 100px;
    height: var(--button-height);
    font-size: 30px;
    /* margin: 0 0 10px 10px; */
    position: relative;
}

[controller] ol li::before {
    content: "";
    position: absolute;
    top: 0; right: 0;
    bottom: 0; left: 0;
    background: var(--dark);
    border-radius: 100px;
    opacity: .5;
}

@keyframes wiggle {
    0% {
        transform: skewY(2deg);
    } 100% {
        transform: skewY(-2deg);
    }
}

[controller] ol li.selected-option::before {
    display: none;
}

[controller] ol li:hover {
    animation: wiggle 512ms infinite ease-in-out alternate;
}

[type="text"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
}